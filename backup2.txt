<!DOCTYPE html>
<html>

<head>

<style type="text/css">
 p {margin-bottom: -1em;  margin-top: 0em;} 
</style>

    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        #title {
            border: 2px solid lightblue;
            width: fit-content;
            padding: 5px;
            border-radius: 0px;
            margin-top: 10px;
        }

        #sightings {
		border: 2px solid lightblue;
            margin-top: 5px;
            width: 80%;
        }

        #report {
            margin-top: 20px;
            width: 80%;
            text-align: center;
        }

        button {
            margin-top: 20px;
            width: 50%;
            height: 40px;
            font-size: 16px;
        }

        .sighting {
            border: 1px solid #ddd;
            padding: 10px;
            margin-bottom: 10px;
            border-radius: 5px;
        }
		
		#contribute {
			padding: 15px;
            border: 2px solid lightblue;
        }
		
		#venmo {
		
			padding: 0px;
            border: 2px solid lightblue;
			width: 30%;
			height: fit-content;
        }

        .sighting-location {
            font-weight: bold;
        }

        #map {
			border: 2px solid lightblue;
            height: 900px;
            width: 80%;
            margin: 0px auto;
        }
    </style>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore-compat.js"></script>
    <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-auth-compat.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD27CKLddswkn-DTg6anVo8BaRWUZJrHao&callback=initMap" async defer></script>
</head>

<body>
    <div id="title">
        <h2><b>TAPS Tracker</b></h2>
    </div>
	
	

	
    <h2><u>Recent Sightings</u></h2>
	
    <div id="sightings"></div>
    <button onclick="toggleSightings()">Show more</button>
	<br><br>
	
	<p><h2><u>Report A Sighting</u></h2></p>
	<p><h3> Select A Location On The Map To Report It</h3><p>
	<div id="map"></div>
	
	<br>
	<div id="contribute">
	<br>
	<center>
	<h2><u>Contribute To The Cause</u></h2>
	<p><h3> If you're interested in making the site better, the code is completly open source: </h3> </p>
	<a href="https://drive.google.com/file/d/1z03Gt_DdyIUT7H9snUI8AoOBgM9uycYc/view?usp=sharing">https://drive.google.com/file/d/1z03Gt_DdyIUT7H9snUI8AoOBgM9uycYc/view?usp=sharing</a>
	<br><br><br><br><br><p></p>
	</div>
	
    
	<br><br>
	
    <div id="venmo">
        <center>

            <h2><u>Fund the project</u></h2>
            <img src="https://i.ibb.co/t42P1W6/qr-code.png" alt="QR Code" style="width:200px;">
			<br><br><br><br><p></p>
        </center>
    </div>
    <script>
	
	/*
	
	rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Allowed colleges list
    function isValidCollege() {
      return ["Cowell Lot 106", "Cowell Lot 107", "Cowell Lot 108", "Cowell Circle",
        "Stevenson Lot 109", "Stevenson Lot 110", "Stevenson Circle",
        "Gym Lot 103", "East Remote", "West Remote", "The Village Lot 168", "Baytree Bookstore Lot 102",
        "McHenry Library Lot 101", "McHenry Library Lot 120",
        "Music Building Lot 126",
        "Merrill Lot 119", "Merrill Circle",
        "Porter Lot 124", "Porter Lot 125",
        "Rachel Carson Lot 146", "Rachel Carson Lot 160", "Rachel Carson Lot 161", "Rachel Carson Lot 162",
        "Family Housing Lot 129", "Family Housing Lot 130", "Family Housing Lot 131", "Family Housing Lot 132", "Family Housing Lot 133", "Family Housing Lot 134", "Family Housing Lot 135", "Family Housing Lot 136",
        "Kresge Lot 142", "Kresge Lot 143", "Kresge Lot 145", "Kresge Lot 147",
        "West Parking Garage", "West Charging Station",
        "Jack Baskin Lot 157", "Jack Baskin Lot 138",
        "Thimann Lot 138",
        "Redwood Grove Lot 158", "Redwood Grove Lot 159",
        "Oakes Circle",
        "College 10 Lot 114", "College 10 Lot 164", "College 10 Lot 165", "College 10 Lot 167",
        "College 9 Lot 166"].hasAny([request.resource.data.college]);
    }

    match /sightings/{sighting} {
      // Only allow create if the provided timestamp is within a tight window around the current time and the college is valid
      allow create: if request.resource.data.timestamp == request.time
                    && !("time" in request.resource.data)
                    && isValidCollege();
      // Allow read for everyone
      allow read: if true;
    }
    
    match /userReports/{userId} {
      // Ensure that a user cannot modify another user's report count
      allow read, write: if request.auth.uid == userId;
    }
  }
}

	
	*/
        var firebaseConfig = {
            apiKey: "AIzaSyCGqa-UqWc1piwR6dcdi_2GFH_59JCqUbc",
  authDomain: "fucktaps-5b81b.firebaseapp.com",
  projectId: "fucktaps-5b81b",
  storageBucket: "fucktaps-5b81b.appspot.com",
  messagingSenderId: "493483922119",
  appId: "1:493483922119:web:6964c571b3f37d311e24e2",
  measurementId: "G-QLJX7LFVBB"
        };
        firebase.initializeApp(firebaseConfig);

        async function init() {
            const userCredential = await firebase.auth().signInAnonymously();
        }
        init();

        var db = firebase.firestore();
        let allSightings = [];
        let showingAll = false;

        var map;
        var markers = [];
        var colleges = [ 
		{name: "Cowell Lot 106", lat: 36.998280, lng: -122.053877},
			{name: "Cowell Lot 107", lat: 36.997918, lng: -122.053193},
			{name: "Cowell Lot 108", lat: 36.997613, lng: -122.052994},
			{name: "Cowell Circle", lat: 36.997705, lng: -122.053444},
			
			
            {name: "Stevenson Lot 109", lat: 36.998219, lng: -122.052683},
			{name: "Stevenson Lot 110", lat: 36.998220, lng: -122.051618},
			{name: "Stevenson Circle", lat: 36.998220, lng: -122.051618},
			
			{name: "Gym Lot 103", lat: 36.994980, lng: -122.055254},
			{name: "East Remote", lat: 36.991035, lng: -122.053164},
			{name: "West Remote", lat: 36.988550, lng: -122.065901},
			{name: "The Village Lot 168", lat: 36.985349, lng: -122.055505},
			{name: "Baytree Bookstore Lot 102", lat: 36.997399, lng: -122.055595},
			
			
			{name: "McHenry Library Lot 101", lat: 36.995104, lng: -122.057185},
			{name: "McHenry Library Lot 120", lat: 36.996277, lng: -122.059167},
			
			{name: "Music Building Lot 126", lat: 36.993388, lng: -122.061556},
			
			
            {name: "Merrill Lot 119", lat: 36.999681, lng: -122.051747},
			{name: "Merrill Circle", lat: 6.999544, lng: -122.052738},
			
			
			{name: "Porter Lot 124", lat: 36.994370, lng: -122.064150},
            {name: "Porter Lot 125", lat: 36.993800, lng: -122.064738},
			
			
            {name: "Rachel Carson Lot 146", lat: 36.992282, lng: -122.064506},
			{name: "Rachel Carson Lot 160", lat: 36.990212, lng: -122.064780},
			{name: "Rachel Carson Lot 161", lat: 36.990005, lng: -122.064874},
			{name: "Rachel Carson Lot 162", lat: 36.990049, lng: -122.065698},
			
			{name: "Family Housing Lot 129", lat: 36.991003, lng: -122.067091},
			{name: "Family Housing Lot 130", lat: 36.990828, lng: -122.067578},
			{name: "Family Housing Lot 131", lat: 36.991186, lng: -122.067705},
			{name: "Family Housing Lot 132", lat: 36.990828, lng: -122.068376},
			{name: "Family Housing Lot 133", lat: 36.991198, lng: -122.068438},
			{name: "Family Housing Lot 134", lat: 36.990586, lng: -122.068785},
			{name: "Family Housing Lot 135", lat: 36.991865, lng: -122.067683},
			{name: "Family Housing Lot 136", lat: 36.992580, lng: -122.067582},
			
			
			{name: "Kresge Lot 142", lat: 36.999190, lng: -122.066422},
			{name: "Kresge Lot 143", lat: 36.997061, lng: -122.067064},
			{name: "Kresge Lot 145", lat: 36.997276, lng: -122.067244},
            {name: "Kresge Lot 147", lat: 36.996812, lng: -122.065315},
			
			{name: "West Parking Garage", lat: 36.999068, lng: -122.063678},
			{name: "West Charging Station", lat: 36.999126, lng: -122.063343},
			
			{name: "Jack Baskin Lot 157", lat: 36.999126, lng: -122.063343},
			{name: "Jack Baskin Lot 138", lat: 37.000204, lng: -122.063897},
			
			{name: "Thimann Lot 138", lat: 36.998152, lng: -122.062603},
			
			
			{name: "Redwood Grove Lot 158", lat: 36.998293, lng: -122.064609},
			{name: "Redwood Grove Lot 159", lat: 36.997111, lng: -122.063948},
			
			
            {name: "Oakes Circle", lat: 36.990163, lng: -122.063304},
			
			{name: "College 10 Lot 114", lat: 37.000129, lng: -122.058957},
			{name: "College 10 Lot 164", lat: 37.000826, lng: -122.059137},
			{name: "College 10 Lot 165", lat: 37.001753, lng: -122.059404},
			{name: "College 10 Lot 165", lat: 37.001753, lng: -122.059404},
			{name: "College 10 Lot 167", lat: 37.003277, lng: -122.058957},
			
            {name: "College 9 Lot 166", lat: 37.001763, lng: -122.057817},
			{name: "College 9 Lot 166", lat: 37.001763, lng: -122.057817}
			];
        
        function initMap() {
		map = new google.maps.Map(document.getElementById('map'), {
        center: { lat: 36.995236, lng: -122.059206 },
        zoom: 15.5
    });

            for (let i = 0; i < colleges.length; i++) {
                let college = colleges[i];
                let marker = new google.maps.Marker({
                    position: { lat: college.lat, lng: college.lng },
                    map: map,
                    title: college.name
                });
                marker.addListener('click', function () {
                    reportSighting(college.name);
                });
                markers.push(marker);
            }
        }

        function reportSighting(collegeName, markerPosition) {
    const confirmation = window.confirm(`Do you want to report a TAPS sighting at ${collegeName}?`);
    if (confirmation) {
        const userId = firebase.auth().currentUser.uid;
        db.collection('sightings').add({
            uid: userId,
            college: collegeName,
            timestamp: firebase.firestore.FieldValue.serverTimestamp()
        });
        fetchSightings();
    }
}

        function displaySightings() {
            const container = document.getElementById('sightings');
            container.innerHTML = '';
            let data = showingAll ? allSightings.slice(0, 50) : allSightings.slice(0, 5);
            data.forEach(sighting => {
                if (sighting.time) {
                    let div = document.createElement('div');
                    div.className = 'sighting';
                    div.innerHTML = `<center><div class="sighting-location">${sighting.college}</div><div>${sighting.time}</div></center>`;
                    container.appendChild(div);
                }
            });
        }

        function toggleSightings() {
            showingAll = !showingAll;
            displaySightings();
            document.querySelector('button').textContent = showingAll ? "Show less" : "Show more";
        }

        function fetchSightings() {
            db.collection('sightings').orderBy('timestamp', 'desc').onSnapshot((querySnapshot) => {
                allSightings = [];
                querySnapshot.forEach((doc) => {
                    const sightingData = doc.data();
                    if (sightingData.timestamp) {
                        const time = sightingData.timestamp.toDate().toLocaleString();
                        allSightings.push({ college: sightingData.college, time: time });
                    }
                });
                displaySightings();
            });
        }

        fetchSightings();
    </script>
</body>

</html>
